PHPUnit 5.0.10 by Sebastian Bergmann and contributors.

....executed statement DROP TABLE IF EXISTS duck CASCADE<br />


executed statement create table duck (id SERIAL PRIMARY KEY,username varchar(50) NOT NULL UNIQUE)<br />


executed statement INSERT INTO duck (username) VALUES ('admin')<br />


.executed statement DROP TABLE IF EXISTS users CASCADE<br />


executed statement CREATE TABLE users  (
  id               SERIAL PRIMARY KEY,
  username         TEXT                        NOT NULL UNIQUE,
  display_name     TEXT,
  password         TEXT                        NOT NULL,
  email            TEXT                        NOT NULL,
  last_login       TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (now()),
  is_active        BOOLEAN                     NOT NULL DEFAULT FALSE,
  is_administrator BOOLEAN                     NOT NULL DEFAULT FALSE,
  is_reporter      BOOLEAN                     NOT NULL DEFAULT FALSE,
  is_banned        BOOLEAN                     NOT NULL DEFAULT FALSE
);<br />


executed statement INSERT INTO users  (username, password, email, is_active, is_administrator) 
VALUES ('admin', '$2y$10$gbjceJ6Cgf8ulnlq5OUC2.DJuCMIKvW91kPwwV1G.JFppEJRYMT.q', 'hikingfan@gmail.com', TRUE, TRUE);<br />


executed statement INSERT INTO users  (username, password, email, is_active, is_reporter) 
VALUES ('reporter', '$2y$10$gbjceJ6Cgf8ulnlq5OUC2.DJuCMIKvW91kPwwV1G.JFppEJRYMT.q', 'hikingfan+reporter@gmail.com', TRUE, TRUE);<br />


.executed statement DROP TABLE IF EXISTS settings CASCADE<br />


executed statement CREATE TABLE settings  (
  id    SERIAL PRIMARY KEY,
  name  TEXT UNIQUE,
  value TEXT
);<br />


executed statement INSERT INTO settings  (name, value) VALUES 
('login_method', 'normal'),
('systemid', '80zhh73n5'),
('theme', 'default'),
('instance_name', 'Openroom Demo'),
('policies', 'Rosenthal Library usually has several rooms available to students for group study on a ' ||
               'first-come, first-serve basis. These rooms are available to currently registered Queens College ' ||
               'students only.

Immediate use of a Group Study Room is made by presenting your valid Queens ' ||
               'College ID at the Circulation Desk (located on Level 3 of the Library). If available, a room will ' ||
               'be assigned to you for one 2-hour time block. If the room is in use a hold may be placed to secure ' ||
               'the next available time slot. Room use, like book use, is assigned to your record in our automated ' ||
               'circulation system. When a room is assigned to you, you will be handed a wooden block upon which ' ||
               'the room number and policies governing Group Study Rooms is adhered. Upon completing your use of ' ||
               'the room, the wooden block is to be returned to the Circulation Desk and the assignment of the room ' ||
               'to your record will be released.

Should you wish to extend the use of the room you are ' ||
               'required to return to the Circulation desk with your ID and the wooden block at the end of the 2 ' ||
               'hours. The room will then be reassigned to you provided there are no other users awaiting use of ' ||
               'the room.'),
('time_format', 'g:i a');<br />


.executed statement DROP TABLE IF EXISTS groups CASCADE<br />


executed statement create table groups (id SERIAL PRIMARY KEY, name TEXT NOT NULL)<br />


executed statement INSERT INTO groups (name) VALUES ('apple')<br />


executed statement INSERT INTO groups (name) VALUES ('ball')<br />


executed statement INSERT INTO groups (name) VALUES ('cat')<br />


.executed statement DROP TABLE IF EXISTS rooms CASCADE<br />


executed statement create table rooms (
  id          SERIAL PRIMARY KEY,
  name        TEXT,
  position    INTEGER,
  capacity    INTEGER,
  groupid     INTEGER REFERENCES Groups (id),
  description TEXT
);<br />


executed statement INSERT INTO rooms (name, position, capacity, groupid, description)
VALUES ('Î∞© 101', 1, 8, 1, 'Ïù¥Í≤ÉÏùÄ ÏãúÌóòÏù¥Îã§.')<br />


.executed statement DROP TABLE IF EXISTS reservations CASCADE<br />


executed statement create table reservations (
  id                   SERIAL PRIMARY KEY,
  start_time           TIMESTAMP NOT NULL,
  end_time             TIMESTAMP NOT NULL,
  room_id              INTEGER   NOT NULL REFERENCES Rooms (id),
  user_id              INTEGER   NOT NULL REFERENCES Users (id),
  number_in_group      INTEGER   NOT NULL DEFAULT 1,
  time_of_request      TIMESTAMP NOT NULL DEFAULT (now()),
  time_of_cancellation TIMESTAMP          DEFAULT NULL
);<br />


executed statement INSERT INTO reservations (start_time, end_time, room_id, user_id) 
VALUES ('2017-03-26 11:30:00.000000', '2017-03-26 11:55:00.000000', 1, 1);<br />


.executed statement DROP TABLE IF EXISTS hours CASCADE<br />


executed statement create table hours (
  id          SERIAL PRIMARY KEY,
  room_id     INTEGER   NOT NULL REFERENCES Rooms (id),
  day_of_week SMALLINT  NOT NULL,
  start_time  TIMESTAMP NOT NULL,
  end_time    TIMESTAMP NOT NULL
);<br />


executed statement INSERT INTO hours (room_id, day_of_week, start_time, end_time) VALUES 
  (1, 1, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 2, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 3, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 4, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 5, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 6, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, 7, '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000');<br />


.executed statement DROP TABLE IF EXISTS specialhours CASCADE<br />


executed statement create table specialhours (
  id         SERIAL PRIMARY KEY,
  room_id    INTEGER   NOT NULL REFERENCES Rooms (id),
  from_range TIMESTAMP NOT NULL,
  to_range   TIMESTAMP NOT NULL,
  start_time TIMESTAMP NOT NULL,
  end_time   TIMESTAMP NOT NULL
);<br />


executed statement INSERT INTO specialhours (room_id, from_range, to_range, start_time, end_time) VALUES 
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000'),
  (1, '2016-10-10 04:00:00', '2016-10-10 04:00:00', '2017-03-26 11:30:00.000000', '2017-03-26 13:30:00.000000');<br />


.executed statement DROP TABLE IF EXISTS optionalfields CASCADE<br />


executed statement create table optionalfields (
  id          SERIAL PRIMARY KEY,
  name        TEXT    NOT NULL,
  form_name   TEXT    NOT NULL,
  type        TEXT    NOT NULL,
  choices     JSON    NOT NULL,
  position    INTEGER NOT NULL,
  question    TEXT    NOT NULL,
  is_private  BOOLEAN NOT NULL DEFAULT FALSE,
  is_required BOOLEAN NOT NULL DEFAULT FALSE
);<br />


executed statement INSERT INTO optionalfields 
  (name, form_name, type, choices, position, question, is_private, is_required) 
  VALUES
  ('campus affiliation', 'campus affiliation form', 1, '{
    "0": "Undergraduate",
    "1": "Graduate",
    "2": "Faculty / Staff"
  }', 1,'What is your Campus Affiliation?', FALSE, TRUE
  );<br />


executed statement INSERT INTO optionalfields
    (name, form_name, type, choices, position, question, is_private, is_required) VALUES
    ('random question name', 'random question form name', 1, '{
    "0": "ËòáÊ≠•Èùí",
    "1": "Âæ©Êó¶Â§ßÂ≠∏",
    "2": "‰∏äÊµ∑Êµ¶",
    "3": "‰πü‰øÇ‰∏ñÁïåË∑üÂà∞Êñ∞Âä†Âù°ÂêåÈ¶ôÊ∏ØÂæåÈù¢Âó∞‰∏ñÁïåÁ¨¨‰∏âÂ§ßË≤®Ê´ÉÊ∏Ø",
    "4": "C√≥mo est√°s hoy?"
  }', 1,
   '"¬øCu√°l es su afiliaci√≥n en el campus ?"', FALSE, TRUE
  );<br />


...                                                   15 / 15 (100%)

Time: 2.39 seconds, Memory: 12.00MB

OK (15 tests, 21 assertions)


[1;37;40mCode Coverage Report:        [0m
[1;37;40m  2017-08-29 20:14:50        [0m
[1;37;40m                             [0m
[1;37;40m Summary:                    [0m
[37;41m  Classes: 27.38% (279/1019) [0m
[37;41m  Methods:  1.24% (55/4422)  [0m
[37;41m  Lines:    1.13% (465/41172)[0m

@PHP::PHP_CodeCoverage
  [37;41mMethods:   0.00% ( 0/36)[0m   [37;41mLines:   1.03% (  4/390)[0m
@PHP::PHP_Timer
  [37;41mMethods:  40.00% ( 2/ 5)[0m   [37;41mLines:  21.43% (  3/ 14)[0m
@PHPUnit.Framework.Constraint::PHPUnit_Framework_Constraint_IsEqual
  [37;41mMethods:   0.00% ( 0/ 3)[0m   [37;41mLines:  26.53% ( 13/ 49)[0m
@PHPUnit.Framework.Constraint::PHPUnit_Framework_Constraint_IsFalse
  [37;41mMethods:  50.00% ( 1/ 2)[0m   [37;41mLines:  50.00% (  1/  2)[0m
@PHPUnit.Framework.Constraint::PHPUnit_Framework_Constraint_IsTrue
  [37;41mMethods:  50.00% ( 1/ 2)[0m   [37;41mLines:  50.00% (  1/  2)[0m
@PHPUnit.Framework::PHPUnit_Framework_Assert
  [37;41mMethods:   5.07% ( 7/138)[0m   [37;41mLines:   2.21% ( 18/816)[0m
@PHPUnit.Framework::PHPUnit_Framework_Constraint
  [37;41mMethods:  28.57% ( 2/ 7)[0m   [37;41mLines:  36.00% (  9/ 25)[0m
@PHPUnit.Framework::PHPUnit_Framework_TestCase
  [37;41mMethods:   4.35% ( 4/92)[0m   [37;41mLines:  18.83% (126/669)[0m
@PHPUnit.Framework::PHPUnit_Framework_TestResult
  [37;41mMethods:   0.00% ( 0/54)[0m   [37;41mLines:   9.39% ( 31/330)[0m
@PHPUnit.Util::PHPUnit_Util_Test
  [37;41mMethods:   3.23% ( 1/31)[0m   [37;41mLines:  19.38% ( 75/387)[0m
\Composer\Autoload::ClassLoader
  [37;41mMethods:   0.00% ( 0/21)[0m   [37;41mLines:  18.46% ( 24/130)[0m
\SebastianBergmann\GlobalState::Blacklist
  [37;41mMethods:  25.00% ( 2/ 8)[0m   [37;41mLines:  10.00% (  3/ 30)[0m
\SebastianBergmann\GlobalState::Restorer
  [37;41mMethods:  50.00% ( 2/ 4)[0m   [37;41mLines:  47.17% ( 25/ 53)[0m
\SebastianBergmann\GlobalState::Snapshot
  [37;41mMethods:  27.27% ( 6/22)[0m   [37;41mLines:  38.61% ( 39/101)[0m
\model::HelloWorld
  [30;42mMethods: 100.00% ( 3/ 3)[0m   [30;42mLines: 100.00% (  8/  8)[0m
\model::User
  [30;43mMethods:  86.96% (20/23)[0m   [30;42mLines:  92.11% ( 35/ 38)[0m
\model::UserSQLRepository
  [30;43mMethods:  80.00% ( 4/ 5)[0m   [30;43mLines:  73.02% ( 46/ 63)[0m
